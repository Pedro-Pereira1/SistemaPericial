%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Metaconhecimento

facto_dispara_regras(alert("MLF", "null", "null", "null", "null", "null", "null", "null", "null", "null"), [1]). % Regra "MLF"
facto_dispara_regras(alert("MLF", "yes", "null", "null", "null", "null", "null", "null", "null", "null"), [2]). % Regra 2
facto_dispara_regras(alert("MLF", "yes", "yes", "null", "null", "null", "null", "null", "null", "null"), [3]). % Regra 3
facto_dispara_regras(alert("MLF", "yes", "no", "null", "null", "null", "null", "null", "null", "null"), [4]). % Regra 4
facto_dispara_regras(alert("MLF", "no", "null", "null", "null", "null", "null", "null", "null", "null"), [5]). % Regra 5
facto_dispara_regras(alert("MLF", "no", "null", "yes", "null", "null", "null", "null", "null", "null"), [6]). % Regra 6
facto_dispara_regras(alert("MLF", "no", "null", "yes", "yes", "null", "null", "null", "null", "null"), [7]). % Regra 7
facto_dispara_regras(alert("MLF", "no", "null", "yes", "yes", "yes", "null", "null", "null", "null"), [8]). % Regra 8
facto_dispara_regras(alert("MLF", "no", "null", "yes", "yes", "yes", "yes", "null", "yes", "null"), [9]). % Regra 9
facto_dispara_regras(alert("MLF", "no", "null", "yes", "yes", "yes", "yes", "null", "yes", "null"), [10]). % Regra 10
facto_dispara_regras(alert("MLF", "no", "null", "yes", "yes", "yes", "yes", "null", "no", "null"), [11]). % Regra 11
facto_dispara_regras(alert("MLF", "no", "null", "yes", "yes", "yes", "no", "null", "null", "null"), [12]). % Regra 12
facto_dispara_regras(alert("MLF", "no", "null", "yes", "yes", "no", "null", "null", "null", "null"), [13]). % Regra 13
facto_dispara_regras(alert("MLF", "no", "null", "yes", "yes", "no", "yes", "null", "null", "null"), [14]). % Regra 14
facto_dispara_regras(alert("MLF", "no", "null", "yes", "yes", "no", "yes", "yes", "null", "null"), [15]). % Regra 15
facto_dispara_regras(alert("MLF", "no", "null", "yes", "yes", "no", "yes", "no", "null", "null"), [16]). % Regra 16
facto_dispara_regras(alert("MLF", "no", "null", "yes", "yes", "no", "no", "null", "null", "null"), [17]). % Regra 17
facto_dispara_regras(alert("MLF", "no", "null", "yes", "no", "null", "null", "null", "null", "null"), [18]). % Regra 18
facto_dispara_regras(alert("MLF", "no", "null", "yes", "no", "null", "yes", "null", "null", "null"), [19]). % Regra 19
facto_dispara_regras(alert("MLF", "no", "null", "yes", "no", "null", "yes", "yes", "null", "null"), [20]). % Regra 20
facto_dispara_regras(alert("MLF", "no", "null", "yes", "no", "null", "yes", "no", "null", "null"), [21]). % Regra 21
facto_dispara_regras(alert("MLF", "no", "null", "yes", "no", "null", "no", "null", "null", "null"), [22]). % Regra 22
facto_dispara_regras(alert("MLF", "no", "null", "no", "null", "null", "null", "null", "null", "null"), [23]). % Regra 23
facto_dispara_regras(alert("MLF", "no", "null", "no", "null", "null", "null", "null", "null", "yes"), [24]). % Regra 24
facto_dispara_regras(alert("MLF", "no", "null", "no", "null", "null", "yes", "null", "null", "yes"), [25]). % Regra 25
facto_dispara_regras(alert("MLF", "no", "null", "no", "null", "null", "yes", "yes", "null", "yes"), [26]). % Regra 26
facto_dispara_regras(alert("MLF", "no", "null", "no", "null", "null", "yes", "no", "null", "yes"), [27]). % Regra 27
facto_dispara_regras(alert("MLF", "no", "null", "no", "null", "null", "no", "null", "null", "yes"), [28]). % Regra 28
facto_dispara_regras(alert("MLF", "no", "null", "no", "null", "null", "null", "null", "null", "no"), [29]). % Regra 29

facto_dispara_regras(alert("SLA", "null", "null", "null", "null", "null"), [30]).
facto_dispara_regras(alert("SLA", "yes", "null", "null", "null", "null"), [31]).
facto_dispara_regras(alert("SLA", "no", "null", "null", "null", "null"), [32]).
facto_dispara_regras(alert("SLA", "yes", "yes", "null", "null", "null"), [33]).
facto_dispara_regras(alert("SLA", "no", "null", "yes", "null", "null"), [34]).
facto_dispara_regras(alert("SLA", "no", "null", "no", "null", "null"), [35]).
facto_dispara_regras(alert("SLA", "yes", "no", "null", "null", "null"), [36]).
facto_dispara_regras(alert("SLA", "yes", "no", "null", "yes", "null"), [37]).
facto_dispara_regras(alert("SLA", "yes", "no", "null", "no", "null"), [38]).
facto_dispara_regras(alert("SLA", "yes", "no", "null", "yes", "yes"), [39]).
facto_dispara_regras(alert("SLA", "yes", "no", "null", "no", "yes"), [40]).
facto_dispara_regras(alert("SLA", "yes", "no", "null", "yes", "no"), [41]).
facto_dispara_regras(alert("SLA", "yes", "no", "null", "no", "no"), [42]).

facto_dispara_regras(alert("CMF","null","null","null","null"),[43]).
facto_dispara_regras(alert("CMF","no","null","null","null"),[44]).
facto_dispara_regras(alert("CMF","yes","null","null","null"),[45]).
facto_dispara_regras(alert("CMF","yes","yes","null","null"),[46]).
facto_dispara_regras(alert("CMF","yes","no","null","null"),[47]).
facto_dispara_regras(alert("CMF","yes","yes","malicious activity","null"),[48]).
facto_dispara_regras(alert("CMF","yes","yes","security incident","null"),[49]).
facto_dispara_regras(alert("CMF","yes","yes","security incident","yes"),[50]).
facto_dispara_regras(alert("CMF","yes","yes","security incident","no"),[51]).
facto_dispara_regras(alert("CMF","yes","yes","misconfiguration","null"),[52]).

facto_dispara_regras(alert("NUA", "null", "null", "null", "null", "null"), [53]).  % Regra 53
facto_dispara_regras(alert("NUA", "yes", "null", "null", "null", "null"), [54]).   % Regra 54
facto_dispara_regras(alert("NUA", "yes", "yes", "null", "null", "null"), [55]).    % Regra 55
facto_dispara_regras(alert("NUA", "yes", "no", "null", "null", "null"), [56]).     % Regra 56
facto_dispara_regras(alert("NUA", "no", "null", "null", "null", "null"), [57]).    % Regra 57
facto_dispara_regras(alert("NUA", "no", "null", "yes", "null", "null"), [58]).     % Regra 58
facto_dispara_regras(alert("NUA", "no", "null", "no", "null", "null"), [59]).      % Regra 59
facto_dispara_regras(alert("NUA", "no", "null", "no", "yes", "null"), [60]).       % Regra 60
facto_dispara_regras(alert("NUA", "no", "null", "no", "no", "null"), [61]).        % Regra 61
facto_dispara_regras(alert("NUA", "no", "null", "no", "no", "yes"), [62]).         % Regra 62
facto_dispara_regras(alert("NUA", "no", "null", "no", "no", "no"), [63]).          % Regra 63

facto_dispara_regras(alert("UDC", "null", "null", "null", "null", "null"), [64]).   % Regra 64
facto_dispara_regras(alert("UDC", "yes", "null", "null", "null", "null"), [65]).    % Regra 65
facto_dispara_regras(alert("UDC", "yes", "yes", "null", "null", "null"), [66]).     % Regra 66
facto_dispara_regras(alert("UDC", "no", "null", "null", "null", "null"), [67]).     % Regra 67
facto_dispara_regras(alert("UDC", "no", "null", "no", "null", "null"), [68]).       % Regra 68
facto_dispara_regras(alert("UDC", "no", "null", "yes", "null", "null"), [69]).      % Regra 69
facto_dispara_regras(alert("UDC", "no", "null", "yes", "yes", "null"), [70]).       % Regra 70
facto_dispara_regras(alert("UDC", "no", "null", "yes", "no", "null"), [71]).        % Regra 71
facto_dispara_regras(alert("UDC", "no", "null", "yes", "no", "yes"), [72]).         % Regra 72
facto_dispara_regras(alert("UDC", "no", "null", "yes", "no", "no"), [73]).          % Regra 73
facto_dispara_regras(alert("UDC", "yes", "no", "null", "null", "null"), [74]).      % Regra 74
facto_dispara_regras(alert("UDC", "yes", "no", "no", "null", "null"), [75]).        % Regra 75
facto_dispara_regras(alert("UDC", "yes", "no", "yes", "null", "null"), [76]).       % Regra 76
facto_dispara_regras(alert("UDC", "yes", "no", "yes", "yes", "null"), [77]).        % Regra 77
facto_dispara_regras(alert("UDC", "yes", "no", "yes", "no", "null"), [78]).         % Regra 78
facto_dispara_regras(alert("UDC", "yes", "no", "yes", "no", "yes"), [79]).          % Regra 79
facto_dispara_regras(alert("UDC", "yes", "no", "yes", "no", "no"), [80]).           % Regra 80


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


regra 1
	se [alert("MLF", "null", "null", "null", "null", "null", "null", "null", "null", "null")]
	entao [cria_facto(questao("Is the user known?", "multiple-choice", ["yes", "no"], "user_known_1"))].

regra 2
	se [alert("MLF", "yes", "null", "null", "null", "null", "null", "null", "null", "null")]
	entao [cria_facto(questao("Was the action made by the user?", "multiple-choice", ["yes", "no"], "was_the_user_1"))].

regra 3
	se [alert("MLF", "yes", "yes", "null", "null", "null", "null", "null", "null", "null")]
	entao [cria_facto(conclusao("False positive."))].

regra 4
	se [alert("MLF", "yes", "no", "null", "null", "null", "null", "null", "null", "null")]
	entao [cria_facto(conclusao("Temporarily lock the account\nReset the password\nReview controls and permissions\nImplement stronger authentication mechanisms."))].

regra 5
	se [alert("MLF", "no", "null", "null", "null", "null", "null", "null", "null", "null")]
	entao [cria_facto(questao("Were there multiple IPs?", "multiple-choice", ["yes", "no"], "are_there_multiple_ips"))].

regra 6
	se [alert("MLF", "no", "null", "yes", "null", "null", "null", "null", "null", "null")]
	entao [cria_facto(questao("Does the IPs ammount make sense?", "multiple-choice", ["yes", "no"], "does_the_number_of_ips_make_sense"))].

regra 7
	se [alert("MLF", "no", "null", "yes", "yes", "null", "null", "null", "null", "null")]
	entao [cria_facto(questao("Is recurrence justifiable?", "multiple-choice", ["yes", "no"], "is_the_reccurence_just"))].

regra 8
	se [alert("MLF", "no", "null", "yes", "yes", "yes", "null", "null", "null", "null")]
	entao [cria_facto(questao("Escalate to the helpdesk by opening a case\nIs the user known by the helpdesk?", "multiple-choice", ["yes", "no"], "user_known_2"))].

regra 9
	se [alert("MLF", "no", "null", "yes", "yes", "yes", "yes", "null", "yes", "null")]
	entao [cria_facto(questao("Ask the user the origin of the IPs.\nIs the origin of the IPs justifiable?", "multiple-choice", ["yes", "no"], "origins_just"))].

regra 10
	se [alert("MLF", "no", "null", "yes", "yes", "yes", "yes", "null", "yes", "null")]
	entao [cria_facto(conclusao("False positive."))].

regra 11
	se [alert("MLF", "no", "null", "yes", "yes", "yes", "yes", "null", "no", "null")]
	entao [cria_facto(conclusao("Temporarily lock the account\nReset the password\nReview controls and permissions\nImplement stronger authentication mechanisms."))].

regra 12
	se [alert("MLF", "no", "null", "yes", "yes", "yes", "no", "null", "null", "null")]
	entao [cria_facto(conclusao("Permanently block the account.", "multiple-choice", ["yes", "no"]))].

regra 13
	se [alert("MLF", "no", "null", "yes", "yes", "no", "null", "null", "null", "null")]
	entao [cria_facto(questao("Escalate to the helpdesk by opening a case. Is the user known by the Helpdesk?", "multiple-choice", ["yes", "no"], "user_known_2"))].

regra 14
	se [alert("MLF", "no", "null", "yes", "yes", "no", "yes", "null", "null", "null")]
	entao [cria_facto(questao("Was the action made by user?", "multiple-choice", ["yes", "no"], "was_the_user_2"))].

regra 15
	se [alert("MLF", "no", "null", "yes", "yes", "no", "yes", "yes", "null", "null")]
	entao [cria_facto(conclusao("False positive."))].

regra 16
	se [alert("MLF", "no", "null", "yes", "yes", "no", "yes", "no", "null", "null")]
	entao [cria_facto(conclusao("Temporarily lock the account\nReset the password\nReview controls and permissions\nImplement stronger authentication mechanisms."))].

regra 17
	se [alert("MLF", "no", "null", "yes", "yes", "no", "no", "null", "null", "null")]
	entao [cria_facto(conclusao("Permanently block the account."))].

regra 18
	se [alert("MLF", "no", "null", "yes", "no", "null", "null", "null", "null", "null")]
	entao [cria_facto(questao("Open case\nIdentify the user\nIs the user known?", "multiple-choice", ["yes", "no"], "user_known_2"))].

regra 19
	se [alert("MLF", "no", "null", "yes", "no", "null", "yes", "null", "null", "null")]
	entao [cria_facto(questao("Was the action made by the user?", "multiple-choice", ["yes", "no"], "was_the_user_2"))].

regra 20
	se [alert("MLF", "no", "null", "yes", "no", "null", "yes", "yes", "null", "null")]
	entao [cria_facto(conclusao("False positive."))].

regra 21
	se [alert("MLF", "no", "null", "yes", "no", "null", "yes", "no", "null", "null")]
	entao [cria_facto(conclusao("Temporarily lock the account\nReset the password\nReview controls and permissions\nImplement stronger authentication mechanisms."))].

regra 22
	se [alert("MLF", "no", "null", "yes", "no", "null", "no", "null", "null", "null")]
	entao [cria_facto(conclusao("Permanently block the account."))].

regra 23
	se [alert("MLF", "no", "null", "no", "null", "null", "null", "null", "null", "null")]
	entao [cria_facto(questao("Is it a national IP?", "multiple-choice", ["yes", "no"], "national_ip"))].

regra 24
	se [alert("MLF", "no", "null", "no", "null", "null", "null", "null", "null", "yes")]
	entao [cria_facto(questao("Escalate to the helpdesk. Is the user known by the helpdesk?", "multiple-choice", ["yes", "no"], "user_known_2"))].

regra 25
	se [alert("MLF", "no", "null", "no", "null", "null", "yes", "null", "null", "yes")]
	entao [cria_facto(questao("Was it an action made by the user?", "multiple-choice", ["yes", "no"], "was_the_user_2"))].

regra 26
	se [alert("MLF", "no", "null", "no", "null", "null", "yes", "yes", "null", "yes")]
	entao [cria_facto(conclusao("False positive."))].

regra 27
	se [alert("MLF", "no", "null", "no", "null", "null", "yes", "no", "null", "yes")]
	entao [cria_facto(conclusao("Temporarily lock the account\nReset the password\nReview controls and permissions\nImplement stronger authentication mechanisms."))].

regra 28
	se [alert("MLF", "no", "null", "no", "null", "null", "no", "null", "null", "yes")]
	entao [cria_facto(conclusao("Permanently block the account."))].

regra 29
	se [alert("MLF", "no", "null", "no", "null", "null", "null", "null", "null", "no")]
	entao [cria_facto(conclusao("Open case\nBlock the IP."))].

regra 30
    se [alert("SLA", "null", "null", "null", "null", "null")]
    entao [cria_facto(questao("Is there a simultaneous login from multiple locations/IPs (>3)?", "multiple-choice", ["yes", "no"], "multipleLocations"))].

regra 31
    se [alert("SLA", "yes", "null", "null", "null", "null")]
    entao [cria_facto(questao("Can the login be explained by legitimate user behavior (VPN, travel, etc.)?", "multiple-choice", ["yes", "no"], "legitimateBehavior"))].

regra 32
    se [alert("SLA", "no", "null", "null", "null", "null")]
    entao [cria_facto(questao("Is there another abnormal pattern?", "multiple-choice", ["yes", "no"], "abnormalPattern"))].

regra 33
    se [alert("SLA", "yes", "yes", "null", "null", "null")]
    entao [cria_facto(conclusao("Classify the alert as a False Positive and mark it as resolved."))].

regra 34
    se [alert("SLA", "no", "null", "yes", "null", "null")]
    entao [cria_facto(conclusao("Escalate the alert to the support team for further investigation and remediation."))].    

regra 35
    se [alert("SLA", "no", "null", "no", "null", "null")]
    entao [cria_facto(conclusao("Classify the alert as a False Positive and mark it as resolved."))].    

regra 36
    se [alert("SLA", "yes", "no", "null", "null", "null")]
    entao [cria_facto(questao("Temporarily suspend the account\nDoes the user have MFA activated?", "multiple-choice", ["yes", "no"], "mfaEnabled"))].    

regra 37
    se [alert("SLA", "yes", "no", "null", "yes", "null")]
    entao [cria_facto(questao("Can login be immediately validated by contacting the user?", "multiple-choice", ["yes", "no"], "userContacted"))].    

regra 38
    se [alert("SLA", "yes", "no", "null", "no", "null")]
    entao [cria_facto(questao("Enforce MFA\nCan login be immediately validated by contacting the user?", "multiple-choice", ["yes", "no"], "userContacted"))].    

regra 39
    se [alert("SLA", "yes", "no", "null", "yes", "yes")]
    entao [cria_facto(conclusao("Classify the alert as a False Positive and reverse any account suspension or access restriction."))].    

regra 40
    se [alert("SLA", "yes", "no", "null", "no", "yes")]
    entao [cria_facto(conclusao("Classify the alert as a False Positive and reverse any account suspension or access restriction."))].    

regra 41
    se [alert("SLA", "yes", "no", "null", "yes", "no")]
    entao [cria_facto(conclusao("Reset the user's password, revoke access tokens, and educate the user on preventing future incidents."))].    

regra 42
    se [alert("SLA", "yes", "no", "null", "no", "no")]
    entao [cria_facto(conclusao("Reset the user's password, revoke access tokens, and educate the user on preventing future incidents."))].

regra 43 
	se[alert("CMF","null","null","null","null")]
	entao[cria_facto(questao("Changes made to the firewall?","multiple-choice",["yes", "no"],"changesFirewall"))].

regra 44 
	se[alert("CMF","no","null","null","null")]
	entao[cria_facto(conclusao("Altering actions have not been detected"))].

regra 45
	se[alert("CMF","yes","null","null","null")]
	entao[cria_facto(questao("Is the activity suspicious?","multiple-choice",["yes", "no"],"suspActivity"))].

regra 46
	se[alert("CMF","yes","yes","null","null")]
	entao[cria_facto(questao("Type of activity detected?","multiple-choice",["Malicious activity","Security incident", "Misconfiguration"],"activityType"))].

regra 47
	se[alert("CMF","yes","no","null","null")]
	entao[cria_facto(conclusao("Legitimate action"))].

regra 48
	se[alert("CMF","yes","yes","malicious activity","null")]
	entao[cria_facto(conclusao("Apply security recommendations. Implement preventive measures, such as regularly auditing and monitoring firewall actions."))].

regra 49
	se[alert("CMF","yes","yes","security incident","null")]
	entao[cria_facto(questao("Was a vulnerability exploited?","multiple-choice",["yes", "no"],"vulnerabExploited"))].

regra 50
	se[alert("CMF","yes","yes","security incident","yes")]
	entao[cria_facto(conclusao("Mitigate the vulnerability exploited by the suspicious activity Implement preventive measures, such as regularly auditing and monitoring firewall actions"))].

regra 51
	se[alert("CMF","yes","yes","security incident","no")]
	entao[cria_facto(conclusao("Apply security recommendations. Implement preventive measures, such as regularly auditing and monitoring firewall actions"))].

regra 52
	se[alert("CMF","yes","yes","misconfiguration","null")]
	entao[cria_facto(conclusao("Revert the changes made to the firewall. Implement preventive measures, such as regularly auditing and monitoring firewall actions"))].

regra 53
    se [alert("NUA", "null", "null", "null", "null", "null")]
    entao [cria_facto(questao("Is the Username in permitted access list?", "multiple-choice", ["Yes", "No"], "permittedUser"))].

regra 54
    se [alert("NUA", "yes", "null", "null", "null", "null")]
    entao [cria_facto(questao("Was the user successfully contacted?", "multiple-choice", ["Yes", "No"], "userContacted"))].

regra 55
    se [alert("NUA", "yes", "yes", "null", "null", "null")]
    entao [cria_facto(conclusao("Classify as false positive"))].

regra 56
    se [alert("NUA", "yes", "no", "null", "null", "null")]
    entao [cria_facto(conclusao("Contact support team for further investigation"))].

regra 57
    se [alert("NUA", "no", "null", "null", "null", "null")]
    entao [cria_facto(questao("Was the account created according to policy?", "multiple-choice", ["Yes", "No"], "accordingPolicy"))].

regra 58
    se [alert("NUA", "no", "null", "yes", "null", "null")]
    entao [cria_facto(conclusao("Classify as false positive"))].

regra 59
    se [alert("NUA", "no", "null", "no", "null", "null")]
    entao [cria_facto(questao("Revoke access privileges. Has the issue been resolved?", "multiple-choice", ["Yes", "No"], "userResponse"))].

regra 60
    se [alert("NUA", "no", "null", "no", "yes", "null")]
    entao [cria_facto(conclusao("Educate the user to prevent future incidents"))].

regra 61
    se [alert("NUA", "no", "null", "no", "no", "null")]
    entao [cria_facto(questao("Deactivate account. Has the issue been resolved?", "multiple-choice", ["Yes", "No"], "userProblemResolved"))].

regra 62
    se [alert("NUA", "no", "null", "no", "no", "yes")]
    entao [cria_facto(conclusao("Verify and adjust account creation policies"))].

regra 63
    se [alert("NUA", "no", "null", "no", "no", "no")]
    entao [cria_facto(conclusao("Eliminate the account and associated data. Verify and modify account creation policies."))].

regra 64
	se [alert("UDC", "null", "null", "null", "null", "null")]
	entao [cria_facto(questao("Does the analyst know the user?", "multiple-choice", ["yes", "no"], "userKnown"))].

regra 65
	se [alert("UDC", "yes", "null", "null", "null", "null")]
	entao [cria_facto(questao("Was the action taken by the user?", "multiple-choice", ["yes", "no"], "legitimateAction"))].

regra 66
	se [alert("UDC", "yes", "yes", "null", "null", "null")]
	entao [cria_facto(conclusao("Classify as False Positive"))].

regra 67
	se [alert("UDC", "no", "null", "null", "null", "null")]
	entao [cria_facto(questao("Collect the IP address associated with the change?", "ip-quest", ["yes", "no"], "ipCollected"))].

regra 68
	se [alert("UDC", "no", "null", "no", "null", "null")]
	entao [cria_facto(conclusao("Block account and revoke privileges due to suspicious IP"))].

regra 69
	se [alert("UDC", "no", "null", "yes", "null", "null")]
	entao [cria_facto(questao("Is the user recognized by the Helpdesk?", "multiple-choice", ["yes", "no"], "helpdeskVerified"))].

regra 70
	se [alert("UDC", "no", "null", "yes", "yes", "null")]
	entao [cria_facto(conclusao("Classify as False Positive"))].

regra 71
	se [alert("UDC", "no", "null", "yes", "no", "null")]
	entao [cria_facto(questao("Can the change be reversed?", "multiple-choice", ["yes", "no"], "reversalPossible"))].

regra 72
	se [alert("UDC", "no", "null", "yes", "no", "yes")]
	entao [cria_facto(conclusao("Suggest password change and revoke session tokens"))].

regra 73
	se [alert("UDC", "no", "null", "yes", "no", "no")]
	entao [cria_facto(conclusao("Block account, as reversal was not possible and user was not verified"))].

regra 74
	se [alert("UDC", "yes", "no", "null", "null", "null")]
	entao [cria_facto(questao("Collect the IP address associated with the change?", "ip-quest", ["yes", "no"], "ipCollected"))].

regra 75
	se [alert("UDC", "yes", "no", "no", "null", "null")]
	entao [cria_facto(conclusao("Block account and revoke privileges due to suspicious IP"))].

regra 76
	se [alert("UDC", "yes", "no", "yes", "null", "null")]
	entao [cria_facto(questao("Is the user recognized by the Helpdesk?", "multiple-choice", ["yes", "no"], "helpdeskVerified"))].

regra 77
	se [alert("UDC", "yes", "no", "yes", "yes", "null")]
	entao [cria_facto(conclusao("Classify as False Positive"))].

regra 78
	se [alert("UDC", "yes", "no", "yes", "no", "null")]
	entao [cria_facto(questao("Can the change be reversed?", "multiple-choice", ["yes", "no"], "reversalPossible"))].

regra 79
	se [alert("UDC", "yes", "no", "yes", "no", "yes")]
	entao [cria_facto(conclusao("Suggest password change and revoke session tokens"))].

regra 80
	se [alert("UDC", "yes", "no", "yes", "no", "no")]
	entao [cria_facto(conclusao("Block account, as reversal was not possible and user was not verified"))].